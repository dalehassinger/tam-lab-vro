<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item3" object-name="workflow:name=generic" id="20bd8396-a79f-4a8c-ba19-0291512970e9" editor-version="2.0" version="0.0.1" api-version="6.0.0" allowed-operations="vef" restartMode="1" resumeFromFailedMode="2">
    <display-name>CMBU | SNAP | Teams Alert</display-name>
    <position y="50.0" x="100.0"/>
    <input>
        <param name="vmName" type="string"/>
        <param name="snapName" type="string"/>
        <param name="snapDescription" type="string"/>
    </input>
    <output/>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="50.0" x="440.0"/>
    </workflow-item>
    <workflow-item name="item3" out-name="item0" type="task" comparator="0">
        <display-name>SNAP-Teams-Alert</display-name>
        <runtime>powershell:7.3</runtime>
        <script encoded="false">function Handler($context, $inputs) {

    # Build PowerShell variables
    if(!$inputs.vmName){
        $vmName = "NA"
    }else{
        $vmName = $inputs.vmName
    }
    if(!$inputs.snapName){
        $snapName = "NA"
    }else{
        $snapName = $inputs.snapName
    }
    if(!$inputs.snapDescription){
        $snapDescription = "NA"
    }else{
        $snapDescription = $inputs.snapDescription
    }

    Write-Host "---------vmName:"$vmName
    Write-Host "-------snapName:"$snapName
    Write-Host "snapDescription:"$snapDescription

    # Define the webhook URL
    $webhookUrl = 'https://thornhilllanecom.webhook.office.com/webhookb2/ac73a8c3-59a2-4df2-b6bd-82ce2fbd4572@015568c1-bbe7-4050-add6-6f36b7b44adb/IncomingWebhook/b41cd4d2fcbd4531892b8a4626340212/925be554-9960-4590-9251-65db25f05419'

# Create the message card
$messageCard = @{
    "@type"    = "MessageCard"
    "@context" = "http://schema.org/extensions"
    "summary"  = "Issue 176715375"
    "sections" = @(
        @{
            "activityTitle"    = "VM SNAP Shot:"
            "facts"            = @(
                @{
                    "name"  = "VM Name:"
                    "value" = "$vmName"
                },
                @{
                    "name"  = "Snap Name:"
                    "value" = "$snapName"
                },
                @{
                    "name"  = "Snap Description:"
                    "value" = "$snapDescription"
                }
            )
            "markdown" = $true
        }
    )
} | ConvertTo-Json -Depth 10

    # Send the message card
    Invoke-RestMethod -Uri $webhookUrl -Method Post -ContentType 'application/json' -Body $messageCard

    # Use this section to add the code to do whatever day 2 process you want to run
    # --- Start the Code


    # --- end the Code

    $output=@{status = 'done'}

    return $output
}
</script>
        <in-binding>
            <bind name="vmName" type="string" export-name="vmName"/>
            <bind name="snapName" type="string" export-name="snapName"/>
            <bind name="snapDescription" type="string" export-name="snapDescription"/>
        </in-binding>
        <out-binding/>
        <description>SNAP VM and Send a Teams Message</description>
        <position y="60.0" x="220.0"/>
    </workflow-item>
</ns2:workflow>
